name: Release

on: workflow_dispatch

jobs:
  release-npm:
    runs-on: ubuntu-latest

    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    env:
      HUSKY: '0'

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2.3.0
        with:
          node-version: 14.x
      - name: Cache Node.js modules
        uses: actions/cache@v2.1.6
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-14.x-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-14.x
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm ci
      - name: Create new release
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          extra_plugins: |
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  release-docker:
    runs-on: ubuntu-latest
    needs: release-npm
    if: needs.release-npm.outputs.new_release_published == 'true'

    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.OS }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.OS }}-buildx-
      - name: Run Buildx
        run: docker buildx build --cache-from "type=local,src=/tmp/.buildx-cache" --cache-to "type=local,dest=/tmp/.buildx-cache" --build-arg ROOM_ASSISTANT_VERSION=${{needs.release-npm.outputs.new_release_version}} --platform linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 -t mkerix/room-assistant:${{needs.release-npm.outputs.new_release_version}} -t mkerix/room-assistant:$([[ "${{needs.release-npm.outputs.new_release_version}}" == *"beta"* ]] && echo "beta" || echo "latest") --push .
      - name: Update description on DockerHub
        uses: peter-evans/dockerhub-description@v2.4.3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: mkerix/room-assistant
