name: CI

on:
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - 'docs/**'
  push:
    branches:
      - '*'
    paths-ignore:
      - 'docs/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x
      - name: Cache Node.js modules
        uses: actions/cache@v2.1.5
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-14.x-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-14.x
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm ci
      - name: Lint the code
        run: npm run lint --if-present
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v2.1.5
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}
            ${{ runner.OS }}-
      - name: Install dependencies
        run: npm ci
      - name: Build the project
        run: npm run build --if-present
      - name: Run tests
        run: npm run test:cov
        env:
          CI: true
      - name: Upload code coverage
        uses: codecov/codecov-action@v1.4.1
        if: matrix.node-version == '14.x'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: Node.js ${{ matrix.node-version }}
          flags: unittests
